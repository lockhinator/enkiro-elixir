# docker-compose.yml (for CI and base definitions)
services:
  db:
    image: postgres:17.5
    restart: always
    container_name: database
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: enkiro_dev_user
      POSTGRES_PASSWORD: enkiro_dev_pass
      POSTGRES_DB: enkiro_dev
    ports:
      - "5433:5432"

  minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z-cpuv1
    ports:
      - "127.0.0.1:9900:9000"
      - "127.0.0.1:9901:9001"
    volumes:
      - ./minio-data:/data
    env_file:
      - .env
    command: [ "server", "--console-address", ":9001", "/data" ]
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}

  # The 'createbuckets' service is used to create initial buckets in MinIO.
  # It runs once after the MinIO service is up.
  createbuckets:
    image: quay.io/minio/mc:RELEASE.2025-03-12T17-29-24Z
    depends_on:
      - minio
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set dockerminio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      /usr/bin/mc mb dockerminio/enkiro/reddit;
      /usr/bin/mc policy set public dockerminio/enkiro/reddit;
      exit 0;
      "

  # The 'app' service is the base for development and testing.
  # It targets the 'development' stage which contains all source code and build tools.
  app:
    container_name: enkiro-app
    # The 'build' section is defined here so CI can build the image without overrides.
    build:
      context: .
      dockerfile: Dockerfile
      target: development # Targets the stage with dependencies and source code
    env_file:
      - .env
    depends_on:
      - db

  # The 'final' service is for building and pushing the production image in CI.
  # It targets the minimal 'final' stage from your Dockerfile.
  final:
    build:
      context: .
      dockerfile: Dockerfile
      target: final # Targets the slim, production-ready stage
    image: ghcr.io/lockhinator/enkiro-elixir:latest

volumes:
  pg-data:
    external: true